from django.db import models
from django.utils.timezone import now

from db.vsolvmodels import VsolvModels


class ECFAudit(VsolvModels):
    ref_id = models.IntegerField()
    ref_type = models.CharField(max_length=28, null=True, blank=True)
    data = models.TextField( null=True, blank=True)
    user_id = models.IntegerField()
    date = models.DateTimeField(null=True, blank=True)
    req_status = models.SmallIntegerField()
    rel_refid = models.SmallIntegerField()
    rel_reftype = models.CharField(max_length=28, null=True, blank=True)
    action = models.CharField(max_length=28, null=True, blank=True)
    class Meta:
        db_table = 'ECFAudit'



class ECFHeader(VsolvModels):
    # supplier_id = models.IntegerField(null=True)
    # supplierstate_id = models.IntegerField(null=True)
    commodity_id = models.IntegerField(null=True)
    crno = models.CharField(max_length=16,null=True)
    ecftype = models.SmallIntegerField()
    ecfdate = models.DateField()
    ecfamount = models.FloatField(default=0.00)
    ecfstatus = models.SmallIntegerField()
    ppx = models.CharField(max_length=1, null=True)
    dueadjustment = models.CharField(max_length=16,default='N')
    notename = models.TextField(null=True,blank=True)
    remark = models.CharField(max_length=128,null=True)
    payto = models.CharField(max_length=1,default='S')
    raisedby= models.IntegerField(null=True)
    raiserbranch = models.IntegerField(null=True)
    raisername = models.CharField(max_length=64)
    approvedby= models.IntegerField(null=True)
    approvername = models.CharField(max_length=64,null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField()
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)
    supplier_type = models.IntegerField(null=True)
    branch = models.CharField(max_length=64,null=True)
    approver_branch = models.CharField(max_length=64,null=True)
    tds = models.IntegerField(default=0, null=True)
    rmcode = models.CharField(max_length=16,null=True)
    client_code = models.CharField(max_length=16,null=True)
    ap_status = models.CharField(max_length=30,null=True, blank=True)

class ECFQueue(VsolvModels):
    ref_id = models.IntegerField(default=6)
    ref_type = models.IntegerField(default=6)
    from_user_id = models.IntegerField(null=False)
    to_user_id = models.IntegerField(null=False)
    created_date = models.DateTimeField(default=now)
    comments = models.CharField(null=False, max_length=2048)
    remarks = models.CharField(max_length=128, null=True, blank=True)
    status = models.SmallIntegerField(default=1)
    is_sys = models.BooleanField(default=False)

class InvoiceHeader(VsolvModels):
    ecfheader = models.ForeignKey(ECFHeader, on_delete=models.CASCADE)
    invoiceno = models.CharField(max_length=16)
    dedupinvoiceno = models.CharField(max_length=16)
    invoicedate = models.DateField()
    suppliergst=models.CharField(max_length=16,null=True)
    raisorbranchgst=models.CharField(max_length=16)
    invoiceamount=models.FloatField()
    taxamount=models.FloatField(default=0.00)
    totalamount=models.FloatField()
    otheramount =models.FloatField(default=0.00)
    roundoffamt=models.DecimalField(max_digits=16, decimal_places=2,default=0)
    deductionamt=models.FloatField(default=0)
    captalisedflag=models.CharField(max_length=1,default='N')
    paymentinstrctn=models.CharField(max_length=128,null=True)
    invoicenetting=models.CharField(max_length=1,default='N')
    invoicegst=models.CharField(max_length=1,default='N')
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)
    supplier_id = models.IntegerField(null=True)
    supplierstate_id = models.IntegerField(null=True)
    ecfinvoiceheaderstatus = models.SmallIntegerField(null=True)
    inv_crno = models.CharField(max_length=16,null=True)

class Invoicedetail(VsolvModels):
    invoiceheader =models.ForeignKey(InvoiceHeader,on_delete=models.CASCADE)
    invoice_po = models.IntegerField(null=True)
    mepno = models.CharField(max_length=16,null=True)
    productcode = models.CharField(max_length=16)
    productname = models.CharField(max_length=128,null=True)
    description = models.CharField(max_length=128,null=True)
    hsn = models.CharField(max_length=16,null=True)
    hsn_percentage = models.IntegerField(default=0)
    uom = models.CharField(max_length=16,null=True)
    unitprice = models.FloatField()
    quantity = models.IntegerField()
    amount = models.FloatField()
    discount = models.FloatField(default=0)
    sgst = models.FloatField(default=0)
    cgst = models.FloatField(default=0)
    igst = models.FloatField(default=0)
    taxamount = models.FloatField(default=0)
    totalamount = models.FloatField()
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)
    invoiceno = models.CharField(max_length=16,null=True,blank=True)
    invoicedate = models.DateField(null=True,blank=True)
    supplier_name = models.CharField(max_length=128, null=True,blank=True)
    suppliergst = models.CharField(max_length=16, null=True,blank=True)
    pincode = models.IntegerField(null=True, blank=True)
    otheramount = models.FloatField(default=0.00)
    roundoffamt = models.DecimalField(max_digits=16, decimal_places=2,default=0)

class InvoicePO(VsolvModels):
    invoiceheader=models.ForeignKey(InvoiceHeader,on_delete=models.CASCADE)
    ponumber=models.CharField(max_length=16)
    grnnumber=models.CharField(max_length=16)
    grndate=models.DateField()
    poquantity=models.IntegerField()
    receivedqty=models.IntegerField(default=0)
    balanceqty=models.IntegerField(default=0)
    receiveddate=models.DateField()
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)
    product_code = models.CharField(max_length=16,null=True)
    invoicedqty = models.IntegerField(default=0)
    invoiceqty = models.IntegerField(default=0)
    invoicedetail = models.ForeignKey(Invoicedetail, on_delete=models.CASCADE, null=True)

class Debit(VsolvModels):
    invoiceheader = models.ForeignKey(InvoiceHeader,on_delete=models.CASCADE)
    invoicedetail = models.ForeignKey(Invoicedetail,on_delete=models.CASCADE,null=True)
    category_code = models.CharField(max_length=16,null=True)
    subcategory_code = models.CharField(max_length=16,null=True)
    debitglno = models.CharField(max_length=64,null=True)
    amount = models.FloatField(default=0.00)
    deductionamount = models.FloatField(default=0)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)
    bsproduct = models.CharField(max_length=16,null=True)

class ccbsdtl(VsolvModels):
    debit = models.ForeignKey(Debit,on_delete=models.CASCADE)
    cc_code = models.CharField(max_length=16,null=True)
    bs_code = models.CharField(max_length=16,null=True)
    code = models.IntegerField()
    ccbspercentage = models.FloatField()
    glno = models.CharField(max_length=64,null=True)
    amount = models.FloatField()
    remarks = models.CharField(max_length=128,null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class Credit(VsolvModels):
    invoiceheader = models.ForeignKey(InvoiceHeader,on_delete=models.CASCADE)
    paymode_id = models.IntegerField(null=True)
    creditbank_id = models.IntegerField(null=True)
    suppliertax_id = models.IntegerField(null=True)
    creditglno = models.IntegerField(default=0)
    creditrefno = models.CharField(max_length=64,null=True)
    suppliertaxtype = models.CharField(max_length=32,null=True)
    suppliertaxrate = models.FloatField(default=0)
    taxexcempted = models.CharField(max_length=1,default='N')
    amount = models.FloatField()
    taxableamount = models.FloatField(default=0)
    ddtranbranch = models.IntegerField(default=0)
    ddpaybranch = models.IntegerField(default=0)
    category_code = models.CharField(max_length=16, null=True)
    subcategory_code = models.CharField(max_length=16, null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class PPXLiquidation(VsolvModels):
    credit = models.ForeignKey(Credit, on_delete=models.CASCADE)
    ppx_number = models.CharField(max_length=16, null=True)
    ppx_amount = models.FloatField(default=0)
    amount = models.FloatField(default=0)
    ecf_number = models.CharField(max_length=16,null=True)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)

class ECFFiles(VsolvModels):
    file_name = models.CharField(max_length=512)
    file_id = models.CharField(max_length=100,default=-1)
    status = models.SmallIntegerField(default=1)
    created_by = models.IntegerField(null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    updated_by = models.IntegerField(null=True, blank=True)
    updated_date = models.DateTimeField(null=True, blank=True)
    ecffile = models.ForeignKey(InvoiceHeader, on_delete=models.CASCADE, null=True)


class ECFMailScheduler(models.Model):
    ecf_id = models.IntegerField()
    raiser_id = models.IntegerField()
    ecf_type = models.CharField(max_length=64, null=True, blank=True)
    ecf_status = models.CharField(max_length=64, null=True, blank=True)
    created_date = models.DateTimeField(default=now)
    created_by = models.IntegerField()
    is_send = models.BooleanField(default=False)
    mail_type = models.CharField(max_length=64, null=True, blank=True)
